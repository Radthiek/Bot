const Discord = require('discord.js');
const client = new Discord.Client();
const ayarlar = require('./ayarlar.json');
const chalk = require('chalk');
const fs = require('fs');
const tools = require('./functions.js');
const moment = require('moment');
const db = require('quick.db')
const Jimp = require('jimp');
const snekfetch = require('snekfetch');
require('./util/eventLoader')(client);

let owner = "348097494548348940"


const http = require('http');
const express = require('express');
const app = express();
app.get("/", (request, response) => {
      console.log(`az √∂nce panelime birisi tƒ±kladƒ± -_-`);
  response.sendStatus(200);
});
app.listen(process.env.PORT);
setInterval(() => {
  http.get(`http://${process.env.PROJECT_DOMAIN}.glitch.me/`);
}, 280000);





const log = message => {
  console.log(`[${moment().format('YYYY-MM-DD HH:mm:ss')}] ${message}`);
};


let prefix = "vgs!"


client.on("message", message => {
  const dmchannel = client.channels.find("name", "dm");
  if (message.channel.type === "dm") {
      if (message.author.id === client.user.id) return;
      dmchannel.sendMessage("", {embed: {
              color: 3447003,
              title: `DM Atan Ki≈üi: **${message.author.tag}**`,
              description: `Dm Mesajƒ±: **${message.content}**`
            }})
  }
  if (message.channel.bot) return;
});



client.on("ready", () => {
  client.user.setActivity(prefix + "yardƒ±m | G√ºncellemelerden Bot Bazen √áevirim Dƒ±≈üƒ± OlaBilir! ") 
  console.log("Baƒülandƒ±m!")   
});

client.commands = new Discord.Collection();
client.aliases = new Discord.Collection();
fs.readdir('./komutlar/', (err, files) => {
  if (err) console.error(err);
  log(`${files.length} komut y√ºklenecek.`);
  files.forEach(f => {
    let props = require(`./komutlar/${f}`);
    log(`Y√ºklenen komut: ${props.help.name}.`);
    client.commands.set(props.help.name, props);
    props.conf.aliases.forEach(alias => {
      client.aliases.set(alias, props.help.name);
    });
  });
});

client.reload = command => {
  return new Promise((resolve, reject) => {
    try {
      delete require.cache[require.resolve(`./komutlar/${command}`)];
      let cmd = require(`./komutlar/${command}`);
      client.commands.delete(command);
      client.aliases.forEach((cmd, alias) => {
        if (cmd === command) client.aliases.delete(alias);
      });
      client.commands.set(command, cmd);
      cmd.conf.aliases.forEach(alias => {
        client.aliases.set(alias, cmd.help.name);
      });
      resolve();
    } catch (e){
      reject(e);
    }
  });
};

client.load = command => {
  return new Promise((resolve, reject) => {
    try {
      let cmd = require(`./komutlar/${command}`);
      client.commands.set(command, cmd);
      cmd.conf.aliases.forEach(alias => {
        client.aliases.set(alias, cmd.help.name);
      });
      resolve();
    } catch (e){
      reject(e);
    }
  });
};

client.unload = command => {
  return new Promise((resolve, reject) => {
    try {
      delete require.cache[require.resolve(`./komutlar/${command}`)];
      let cmd = require(`./komutlar/${command}`);
      client.commands.delete(command);
      client.aliases.forEach((cmd, alias) => {
        if (cmd === command) client.aliases.delete(alias);
      });
      resolve();
    } catch (e){
      reject(e);
    }
  });
};

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'sa') {
    if (msg.guild.id == "264445053596991498") return;
    if (msg.guild.id == "478635188079820800") return;
    if (msg.guild.id == "476780574804148224") return;
    if (msg.guild.id == "482861652015054869") return;
        setTimeout(() => {
    }, 1000);//bekle
    msg.react('üá¶')
    msg.react('üá∏')
            setTimeout(() => {
    }, 1500);
    msg.reply('Aleyk√ºm Selam!');
  }
});




client.on('message', msg => {
  if (msg.content.toLowerCase() === '<@442397076937244672>') {
    if (msg.guild.id == "264445053596991498") return;
        setTimeout(() => {
    }, 1000);//bekle
    msg.react('üáπ')
    msg.react('üá≤')
            setTimeout(() => {
    }, 1500);
    msg.reply('Botun Prefixi: vgs!');
  }
});




//dene

client.elevation = message => {
  if(!message.guild) {
	return; }
  let permlvl = 0;
  if (message.member.hasPermission("BAN_MEMBERS")) permlvl = 2;
  if (message.member.hasPermission("ADMINISTRATOR")) permlvl = 3;
  if (message.author.id === ayarlar.sahip) permlvl = 4;
    if (message.author.id === ayarlar.zpeed) permlvl = 4;

  return permlvl;
};

var regToken = /[\w\d]{24}\.[\w\d]{6}\.[\w\d-_]{27}/g;

client.on('warn', e => {
  console.log(chalk.bgYellow(e.replace(regToken, 'that was redacted')));
});

client.on('error', e => {
  console.log(chalk.bgRed(e.replace(regToken, 'that was redacted')));
});

client.on('message', msg => {
  if (msg.content === 'discord.gg') {
        if (msg.guild.id == "264445053596991498") return;
   msg.delete(30)
    msg.reply('Reklam Engellendi');
  }
});


  

client.on('message', msg => {
  if (msg.content === 'bb') {
    if (msg.guild.id == "264445053596991498") return;
    msg.reply('G√∂r√º≈ümek √úzere :hand_splayed::skin-tone-5:  ');
  }
});


client.on('message', message => {
  if (message.author.bot) return;
  if (!message.content.startsWith(prefix)) return;

  let command = message.content.split(' ')[0];
  command = command.slice(prefix.length);

  let args = message.content.split(' ').slice(1);

  if (command === 'tavsiyeni-g√∂nder' || command === 'tavsiye') {
    let str = '<@348097494548348940>';//@silmeyin!
    let id = str.replace(/[<@348097494548348940>]/g, '');
    let mesaj = args.slice(0).join(' ');
    if (mesaj.length < 1) return message.reply(` ‚ö† tavsiyeni yazmayƒ± unuttun. ‚ö† `);
    message.channel.sendEmbed(new Discord.RichEmbed()
  .setColor("#36393F")
    .setDescription('Tavsiyeniz G√∂nderilmi≈ü En Kƒ±sa S√ºre ƒ∞√ßinde Sahibim Bakacaktƒ±r'));
    const embed = new Discord.RichEmbed()
  .setColor("#36393F")
    .setTitle('Tavsiye bilgileri;')
    .addField('Tavsiye:', mesaj, true)
    .addField('Kullanƒ±cƒ± adƒ±:', message.author.tag, true)
    .addField('Kullanƒ±cƒ± kimliƒüi:', message.author.id, true)
    .addField('Sunucu adƒ±:', message.guild.name, true)
    .addField('Sunucu kimliƒüi:', message.guild.id, true)
    client.fetchUser(id)
    .then(user => {user.send({embed})})
  }
});

client.on('guildCreate', guild => {
    let channel = client.channels.get("473534323656753152")
        const embed = new Discord.RichEmbed()
        .setColor("RANDOM")
        .setAuthor(`Giri≈ü ${guild.name}`)
        .setThumbnail(guild.iconURL)
        .addField("Kurucu", guild.owner)
        .addField("Sunucu ID", guild.id, true)
        .addField("Toplam Kullanƒ±cƒ±", guild.memberCount, true)
        .addField("Toplam Kanal", guild.channels.size, true)
         channel.send(embed);
    });
client.on('guildDelete', guild => {
    let channel = client.channels.get("473534323656753152")
        const embed = new Discord.RichEmbed()
        .setColor("RANDOM")
        .setAuthor(`√áƒ±kƒ±≈ü ${guild.name}`)
        .setThumbnail(guild.iconURL)
        .addField("Kurucu", guild.owner)
        .addField("Sunucu ID", guild.id, true)
        .addField("Toplam Kullanƒ±cƒ±", guild.memberCount, true)
        .addField("Toplam Kanal", guild.channels.size, true)
         channel.send(embed);
    });

	client.on('message', message => {
if (message.content.toLowerCase() === prefix + "espiri") {
    var sans = ["Ge√ßen g√ºn ge√ßmi≈ü g√ºnlerimi aradƒ±m ama me≈üguld√º.", "Yaƒümur yaƒümƒ±≈ü kar peynir", "D√ºnya d√∂nermi≈ü ay da k√∂fte‚Ä¶", "Bu erikson ba≈üka erik yok.", "Yƒ±kanan Ton a ne denir Washington", "Hadi oyun oynayalƒ±m. Vazge√ßtim oymadan oynayalƒ±m!", "Ge√ßen g√ºn kamyonu s√ºrd√ºm Leonardo da Vinci.", "Doƒüumdan sonra √ßok kilo aldƒ±m. Doƒüduƒüumda 2 kiloydum ≈üimdi 62.", "Adam 7 g√ºn boyunca nezle olmu≈ü. Sƒ±kƒ±lmƒ±≈ü bug√ºn de Petek le olayƒ±m demi≈ü.", "Yarasa yararlƒ± bir hayvandƒ±r. Yararlƒ± bir hayvan olmasaydƒ± yaramasa derlerdi.", " Benim neden karde≈üim yok baba  Seni g√∂r√ºnce ikincisine cesaret edemedik.", "Osmanlƒ±da kimseye bor√ß takamƒ±yordun mesela sikke sikke √∂d√ºyodun‚Ä¶", "Tatlƒ± yiyip, tatlƒ± konu≈üuluyorsa bundan sonra mantƒ± yiyip mantƒ±klƒ± konu≈üacaƒüƒ±z.", "Babamƒ± sahura kaldƒ±rmayƒ± unuttuk anneme masada ne eksik diyorum tuzluk mu diyor.", "+Okeyde kƒ±za elin nasƒ±l dedim. Ojeli dedi. Ben ≈ûoka girdim. O Migrosa.", "Canƒ±m sƒ±kkƒ±n kanka sonra gel"];
    var sonuc = sans[Math.floor((Math.random() * sans.length))];
    const embed = new Discord.RichEmbed()
    .addField(`***___Espri___***`, `${sonuc}`)
    return message.channel.sendEmbed(embed);
}
});



client.on('message', msg => {
if (msg.content.toLowerCase() === prefix + "sigara") {
  msg.react('üö¨');
  msg.react('‚òÅ');
msg.channel.send('üö¨‚òÅ‚òÅ‚òÅ')
.then(nmsg => nmsg.edit('üö¨‚òÅ‚òÅ‚òÅ‚òÅ'))
.then(nmsg => nmsg.edit('üö¨‚òÅ‚òÅ‚òÅ'))
.then(nmsg => nmsg.edit('üö¨‚òÅ‚òÅ'))
.then(nmsg => nmsg.edit('üö¨‚òÅ'))
.then(nmsg => nmsg.edit('üö¨‚òÅ'))
.then(nmsg => nmsg.edit('**Sigaram bitti** | **Sigara ƒ∞√ßmeyiniz.** :no_smoking: **Sigara Saƒülƒ±ƒüa Zararlƒ±dƒ±r**'));
   msg.react('üö¨')
  msg.react('‚òÅ')
}
});





//hatalarƒ± sen √ß√∂zersin artƒ±k dene bakƒ±m oldumu
client.on('message', message => {
if (message.content.toLowerCase() === prefix + "zekam") {
    var sans = ["11", "15", "20", "24", "28", "31", "39", "45", "49", "54", "58", "63", "67", "77", "73", "84", "80", "83", "96", "94", "99", "Albert Einstein mƒ±sƒ±n?"];
    var sonuc = sans[Math.floor((Math.random() * sans.length))];
    const embed = new Discord.RichEmbed()
    .addField(`***___Zekan___***`, `${sonuc}`)
    return message.channel.sendEmbed(embed);
}
});
  
 
 
 client.on("message", async message => {
    const args = message.content.substring(prefix.length).split(" ");
    const command = args.shift().toLowerCase();
if(command === "discrim") {
        const discrim = args[0] || message.author.discriminator;
        const users = client.users.filter(user => user.discriminator === discrim).map(user => user.tag);
        
        if (users < 1) {
const embed2 = new Discord.RichEmbed()
.setColor(3447003)
.setDescription(`${discrim} bulunamadƒ±!`)
            return message.channel.send({embed2});
        } else {
           message.channel.send(`${users.join('\n')}`, { split: true })
        }
    }
});
 
 
 
 
 client.on("message", async message => {
    const args = message.content.substring(prefix.length).split(" ");
    const command = args.shift().toLowerCase();
    if (command === "ters") {
        const mapping = '¬°"#$%‚Öã,)(*+\'-Àô/0∆ñ·ÑÖ∆ê„Ñ£œõ9„Ñ•86:;<=>¬ø@‚àÄq∆Üp∆é‚Ñ≤◊§HI≈ø ûÀ•WNO‘ÄQ…πS‚î¥‚à©ŒõMX‚ÖÑZ[/]^_`…êq…îp«ù…ü∆É…•·¥â…æ ûl…Øuodb…πs án å çx éz{|}~';
        // Start with the character '!'
        const OFFSET = '!'.charCodeAt(0);
        if (args.length < 1) {
            message.channel.send('Ters yazƒ±lacak yazƒ±yƒ± yazmalƒ±sƒ±n.');
        }

        message.channel.send(
            args.join(' ').split('')
            .map(c => c.charCodeAt(0) - OFFSET)
            .map(c => mapping[c] || ' ')
            .reverse().join('')
        )
    }
});
 

client.on('guildCreate', guild => {
  guild.owner.send('Beni Eklediƒüin ƒ∞√ßin Te≈üekk√ºrler | Komutlarƒ±ma vgs!yardƒ±m Yazarak Bakabilirsiniz | Discord Sunucuma Gidmek ƒ∞√ßin [Tikla!]( https://goo.gl/fJg3z5)%27)')
})







client.on('message', message => {
    if (message.content.toLowerCase() === 'vgs!kedi') {
var request = require('request');

request('http://aws.random.cat/meow', function (error, response, body) {
    if (error) return console.log('Hata:', error);
    else if (!error) { 
        var info = JSON.parse(body);
  const foto = new Discord.RichEmbed()
  .setImage(info.file)
      message.channel.send(foto)
    }
})
    }
});









client.on('message', message => {
    if (message.content.toLowerCase() === 'k√∂pek') {
var request = require('request');

request('https://random.dog/woof.json', function (error, response, body) {
    if (error) return console.log('Hata:', error);
    else if (!error) {
        var info = JSON.parse(body);
  const foto = new Discord.RichEmbed()
  .setImage(info.url)
      message.channel.send(foto)
    }
})
    }
});







client.on('message', async message => {
  if (message.content.toLowerCase() === prefix + 'd√∂viz') {
var request = require('request');
request('https://www.doviz.com/api/v1/currencies/USD/latest', function (error, response, body) {
  if (error) return console.log('Hata:', error);
  else if (!error) { 
      var info = JSON.parse(body);
request('https://www.doviz.com/api/v1/currencies/EUR/latest', function (error, response, body) {
  if (error) return console.log('Hata:', error); 
  else if (!error) { 
      var euro = JSON.parse(body);

      let doviz = new Discord.RichEmbed()
  .setColor("#36393F")
      .setFooter(`${message.author.username} tarafƒ±ndan istendi.`, message.author.avatarURL)
      .addField("üíé D√∂viz", `**üíµ Dolar: **${info.buying} TL\n**üí∂ Euro: **${euro.buying} TL`)
     
      message.channel.send(doviz);
}
})
  }
})
  }
});




client.on("message", async message => {
    const args = message.content.substring(prefix.length).split(" ");
    const command = args.shift().toLowerCase();
    if (command === "vaporwave") {
        const mapping = '¬°"#$%‚Öã,)(*+\'-Àô/0∆ñ·ÑÖ∆ê„Ñ£œõ9„Ñ•86:;<=>¬ø@Ôº°Ôº¢Ôº£Ôº§Ôº•Ôº¶ÔºßÔº®Ôº©Ôº™Ôº´Ôº¨Ôº≠ÔºÆÔºØÔº∞Ôº±Ôº≤Ôº≥Ôº¥ÔºµÔº∂Ôº∑Ôº∏ÔºπÔº∫[/]^_`ÔΩÅÔΩÇÔΩÉÔΩÑÔΩÖÔΩÜÔΩáÔΩàÔΩâÔΩäÔΩãÔΩåÔΩçÔΩéÔΩèÔΩêÔΩëÔΩíÔΩìÔΩîÔΩïÔΩñÔΩóÔΩòÔΩôÔΩö{|}~';
        const OFFSET = '!'.charCodeAt(0);
        if (args.length < 1) {
            message.channel.send('Estetik yazƒ±lacak yazƒ±yƒ± yazmalƒ±sƒ±n.');
        }

        message.channel.send(
            args.join(' ').split('')
            .map(c => c.charCodeAt(0) - OFFSET)
            .map(c => mapping[c] || ' ')
            .join('')
        )
    }
});











client.on("message", async message => {
  var user = message.mentions.users.first() || message.author;
    if (message.content.toLowerCase() === prefix + "wasted") {
      message.channel.startTyping();
        var user = message.mentions.users.first() || message.author;
        if (!message.guild) user = message.author;

        Jimp.read(user.avatarURL, (err, image) => {
            image.resize(295, 295)
            image.greyscale()
            image.gaussian(3)
            Jimp.read("https://cdn.glitch.com/b18a2fa6-68cb-49d5-9818-64c50dd0fdab%2F1.png?1529363616039", (err, avatar) => {
                avatar.resize(295, 295)
                image.composite(avatar, 4, 0).write(`./img/wasted/${client.user.id}-${user.id}.png`);
                setTimeout(function() {
                    message.channel.send(new Discord.Attachment(`./img/wasted/${client.user.id}-${user.id}.png`));
                }, 1000);
          message.channel.stopTyping();
            });
        });
    }
});




const GIFEncoder = require('gifencoder');

client.on("message", async message => {
  var user = message.mentions.users.first() || message.author;
    if (message.content.toLowerCase() === prefix + "trigger") {
        const options = {
            size: 256,
          
            frames: 16
        }

        message.channel.send("ƒ∞≈üleniyor.. L√ºtfen bekleyiniz. ‚è≤").then(m => m.delete(1000));

        function getRandomInt(min, max) {
            return Math.floor(Math.random() * (max - min + 1)) + min;
        }
        const args = message.content.split(' ').slice(1);
        let member = message.mentions.users.first()
        if (args[0] === undefined) member = message.author;
        let avatarurl = member.avatarURL;
        if (['jpg', 'jpeg', 'gif', 'png', 'webp'].some(x => args.join(' ').includes(x))) {
            avatarurl = args.join(' ').replace(/gif|webp/g, 'png');
        }
        const base = new Jimp(options.size, options.size);
        const avatar = await Jimp.read(avatarurl);
        const text = await Jimp.read('https://cdn.glitch.com/a7d3b6b8-9b7a-4aab-9ee4-1db0c07ef1eb%2Ftriggered.png?1526842782410');
        const tint = await Jimp.read('https://cdn.glitch.com/5fed2789-b430-43c5-bf1b-a8dd32d46b97%2Fred.png?1527082445373');
        avatar.resize(320, 320);
        tint.scaleToFit(base.bitmap.width, base.bitmap.height);
        tint.opacity(0.2);
        text.scaleToFit(280, 60);
        const frames = [];
        const buffers = [];
        const encoder = new GIFEncoder(options.size, options.size);
        const stream = encoder.createReadStream();
        let temp;

        stream.on('data', async buffer => await buffers.push(buffer));
        stream.on('end', async () => {
            return await message.channel.send({
                files: [{
                    name: 'notechtriggered.gif',
                    attachment: Buffer.concat(buffers)
                }]
            });
        });
        for (let i = 0; i < options.frames; i++) {
            temp = base.clone();
            if (i === 0) {
                temp.composite(avatar, -16, -16);
            } else {
                temp.composite(avatar, -32 + getRandomInt(-16, 16), -32 + getRandomInt(-16, 16));
            }
            temp.composite(tint, 0, 0);
            if (i === 0) temp.composite(text, -10, 200);
            else temp.composite(text, -12 + getRandomInt(-8, 8), 200 + getRandomInt(-0, 12));
            frames.push(temp.bitmap.data);
        }
        encoder.start();
        encoder.setRepeat(0);
        encoder.setDelay(20);
        for (const frame of frames) {
            encoder.addFrame(frame);
        }
        encoder.finish();
    }
})








client.on("message", async message => {
  var user = message.mentions.users.first() || message.author;
    if (message.content.toLowerCase() === prefix + "sniper") {
        var user = message.mentions.users.first() || message.author;
        if (!message.guild) user = message.author;

        message.channel.send("ƒ∞≈üleniyor.. L√ºtfen bekleyiniz. ‚è≤").then(m => m.delete(1000));

        Jimp.read(user.avatarURL, (err, image) => {
            image.resize(310, 325)
            image.greyscale()
            image.gaussian(3)
            Jimp.read("https://cdn.glitch.com/b18a2fa6-68cb-49d5-9818-64c50dd0fdab%2FPNGPIX-COM-Crosshair-PNG-Transparent-Image.png?1529363625811", (err, avatar) => {
                avatar.resize(310, 325)
                image.composite(avatar, 2, 0).write(`./img/snip/${client.user.id}-${user.id}.png`);
                setTimeout(function() {
                    message.channel.send(new Discord.Attachment(`./img/snip/${client.user.id}-${user.id}.png`));
                }, 1000);
            });

        });
    }
});








const table = require('table');
const arraySort = require('array-sort');


client.on("message", async message => {
  var user = message.mentions.users.first() || message.author;
    if (message.content.toLowerCase() === prefix + "davetler") {
        let invites = await message.guild.fetchInvites().catch(error => {
            return message.channel.send(`Davetleri g√∂r√ºnt√ºlemek i√ßin yetkim bulunmuyor.`);
        })
        invites = invites.array();
        arraySort(invites, 'uses', {
            reverse: true
        }); 
        let possibleInvites = [
            ['Kullanƒ±cƒ±', 'Kullanƒ±m']
        ]; 
        invites.forEach(function(invite) {
            possibleInvites.push([invite.inviter.username, invite.uses]);
        })
        const embed = new Discord.RichEmbed()
            .setColor("RANDOM")
            .addField('Olu≈üturulma Sƒ±ralamasƒ±', `\`\`\`${table.table(possibleInvites)}\`\`\``);
        message.channel.send(embed)
    }
});



client.on('message', message => {
  if (message.content.toLowerCase() === prefix + "≈üans") {
      var sans = ["üíé|üí≥|‚åõ - Malesef Kaybettin", "‚åõ|‚åõ|üíé - T√ºh Be Tekrar Dene", "üí≥|üíé|üí≥ - Hadi Be Az Kaldƒ±", "üíé|üíé|üíé - Helal Sana Hepsini Tutturdun", "üíé|‚åõ|‚åõ - Az Kaldƒ± Merak Etme", "üí≥|üí≥|üí≥ - Profesyonelsin Dostum", "üíé|üí≥|‚åõ - Birdaki Sefere", "‚åõ|‚åõ|‚åõ - Bu ƒ∞≈üte Ustasƒ±n Dostum"];
       var sonuc = sans[Math.floor((Math.random() * sans.length))];
    const embed = new Discord.RichEmbed()
    .addField(`***___≈ûans___***`, `${sonuc}`)
    return message.channel.sendEmbed(embed);
}
});









client.on("message", message => {
  if (message.author.bot) return;
 if (message.content.toLowerCase() === prefix + 't√ºrkkahvesi')
    if (message.author.type !== "group") {
			 message.channel.send('Baƒülanƒ±lƒ±yor....').then(msg => {
            msg.react("‚òï").then((msgreaction) => msgreaction.message.edit(kahve))
        });
			message.delete()
      const kahve = new Discord.RichEmbed()
      .setImage("https://goo.gl/36DtWR")
      .setColor(Math.floor(Math.random() * (0xFFFFFF + 1)))
  };
});



    client.on('message', msg => {
  if (msg.content.toLowerCase() === prefix + 'ƒ±nflames') {
    if (msg.author.id !== ayarlar.sahip) {
        msg.channel.send('Kimliƒüin doƒürulanƒ±yor..')
        .then(nmsg => nmsg.edit('Sen InFlames deƒüilsin.'));
    }else{
    msg.channel.send('InFlames yazƒ±lƒ±yor....')
      .then(nmsg => nmsg.edit(':regional_indicator_i:'))
      .then(nmsg => nmsg.edit(':regional_indicator_i: :regional_indicator_n:'))
      .then(nmsg => nmsg.edit(':regional_indicator_i: :regional_indicator_n: :regional_indicator_f:'))
      .then(nmsg => nmsg.edit(':regional_indicator_i: :regional_indicator_n: :regional_indicator_f: :regional_indicator_l:'))
      .then(nmsg => nmsg.edit(':regional_indicator_i: :regional_indicator_n: :regional_indicator_f: :regional_indicator_l: :regional_indicator_a: :regional_indicator_m: :regional_indicator_e:'))
      .then(nmsg => nmsg.edit(':regional_indicator_i: :regional_indicator_n: :regional_indicator_f: :regional_indicator_l: :regional_indicator_a: :regional_indicator_m: :regional_indicator_e:'))
      .then(nmsg => nmsg.edit(':regional_indicator_i: :regional_indicator_n: :regional_indicator_f: :regional_indicator_l: :regional_indicator_a:  :regional_indicator_m: :regional_indicator_e: :regional_indicator_s:'));
  }
  }
});













client.on(`message`, msg => {
  if (msg.content.toLowerCase() === prefix + 's√∂z') {
    msg.delete();
    var Random = [
      'Herkes kendi kaderinin demircisidir',
      'Belki hi√ß bir ≈üey yolunda gitmedi ama hi√ßbir ≈üey de beni yolumdan etmedi!',
      'G√ºl biraz; bunca keder, bunca g√∂zya≈üƒ± dinsin, g√ºl biraz; ≈üu g√∂k kubbe kahkahanƒ± i≈üitsin. Her gidenin ardƒ±ndan ko≈ümaya deƒümez hayat, gelecekleri bekle, gidecek varsƒ±n gitsin.',
      'A≈ük davaya benzer, cefa √ßekmek de ≈üahide. ≈ûahidin yoksa davayƒ± kazanamazsƒ±n ki!',
      'ƒ∞nsan geride bƒ±raktƒ±klarƒ±nƒ± √∂zler, sahip olduƒüundan sƒ±kƒ±lƒ±r, ula≈üamadƒ±ƒüƒ±na tutulur. Genelde ula≈üƒ±lmaz olan hep a≈ük olur.',
      'Salatalƒ±ƒüƒ±n kabuƒüunu soymak, onun hƒ±yar olduƒüu ger√ßeƒüini deƒüi≈ütirmez.',
      'Bu kadar y√ºrekten √ßaƒüƒ±rma beni. Bir gece ansƒ±zƒ±n gelebilirim. Beni bekliyorsan, uyumamƒ±≈üsan, sevin√ßten kapƒ±nda √∂lebilirim.',
      'Nank√∂r insan her ≈üeyin fiyatƒ±nƒ± bilen hi√ßbir ≈üeyin deƒüerini bilmeyen kimsedir.',
      'Biz birbirimize d√∂nm√º≈ü iki ayna gibiyiz. ƒ∞√ßimizde binlerce olsa da g√∂r√ºnt√ºm√ºz bir biz sadece birbirimizi g√∂r√ºr√ºz‚Ä¶',
      'Gittiƒüin yerde bo≈üluk dolduran deƒüil, gittiƒüin zaman bo≈üluƒüu doldurulamayan ol.',
      'Eƒüer a√ß ve kimsesiz bir k√∂peƒüi alƒ±p bakar ve rahata kavu≈üturursanƒ±z sizi ƒ±sƒ±rmaz. ƒ∞nsan ve k√∂pek arasƒ±ndaki temel fark budur.',
      'Bir ili≈ükiyi kadƒ±n ba≈ülatƒ±r, kadƒ±n bitirir. Ama ba≈ülatan ve bitiren aynƒ± kadƒ±n olmayabilir.',
      'Bir tohum verdin √ßi√ßeƒüini al. Bir √ßekirdek verdin aƒüacƒ±nƒ± al. Bir dal verdin ormanƒ±nƒ± al. D√ºnyamƒ± verdim sana bende kal.',
      'Yalnƒ±zca k√ºlt√ºrl√º insanlar √∂ƒürenmeyi sever cahiller ders vermeyi tercih eder.',
    ];
    var S√∂zver = Math.floor(Math.random()*Random.length);
    const s√∂z = new Discord.RichEmbed()
    .setDescription(`${Random[S√∂zver]}`)
    .setColor(Math.floor(Math.random() * (0xFFFFFF + 1)))
    return msg.channel.sendEmbed(s√∂z);
  }
});




client.on('message', msg => {
  if (msg.content.toLowerCase() === prefix + 'be≈üikta≈ü') {
    msg.delete();
    msg.channel.send({embed: {
        color:  0x000000,
        author: {
        },
        description: 'BE≈ûƒ∞KTA≈û :heart: :yellow_heart: :purple_heart:  :blue_heart: :yellow_heart: :purple_heart:',
        footer: {
        }
      }
    });
  }});




client.on('message', msg => {
  if (msg.content.toLowerCase() === 'be≈üikta≈ü')
    if (msg.author.type !== "group") {
      const be≈üikta≈ü = new Discord.RichEmbed()
      .setImage("https://goo.gl/KRfm45")
      .setColor("#36393F");
      return msg.channel.sendEmbed(be≈üikta≈ü);
  }
});

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'fenerbah√ße')
    if (msg.author.type !== "group") {
      const fenerbah√ße = new Discord.RichEmbed()
      .setImage("https://goo.gl/uX2Sqa")
      .setColor("#36393F");
      return msg.channel.sendEmbed(fenerbah√ße);
  }
});

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'galatasaray')
    if (msg.author.type !== "group") {
      const galatasaray = new Discord.RichEmbed()
      .setImage("https://goo.gl/7TLZ8H")
      .setColor("#36393F");
      return msg.channel.sendEmbed(galatasaray);
  }
});

client.on('message', msg => {
  if (msg.content.toLowerCase() === '41kocaeli')
    if (msg.author.type !== "group") {
      const kocaelispor = new Discord.RichEmbed()
      .setImage("https://goo.gl/iXizxf")
      .setColor("#36393F");
      return msg.channel.sendEmbed(kocaelispor);
  }
});

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'trabzonspor')
    if (msg.author.type !== "group") {
      const trabzon = new Discord.RichEmbed()
      .setImage("https://goo.gl/q9AFbP")
      .setColor("#36393F");
      return msg.channel.sendEmbed(trabzon);
  }
});

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'ba≈üak≈üehir')
    if (msg.author.type !== "group") {
      const ba≈üak≈üehir = new Discord.RichEmbed()
      .setImage("https://goo.gl/3hC3wu")
      .setColor("#36393F");
      return msg.channel.sendEmbed(ba≈üak≈üehir);
  }
});

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'bursaspor')
    if (msg.author.type !== "group") {
      const bursaspor = new Discord.RichEmbed()
      .setImage("https://goo.gl/j5GC5E")
      .setColor("#36393F");
      return msg.channel.sendEmbed(bursaspor);
  }
});

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'karsspor')
    if (msg.author.type !== "group") {
      const karsspor = new Discord.RichEmbed()
      .setImage("https://cdn.discordapp.com/attachments/415626545538007073/442456119957389322/kars.jpg")
      .setColor("#36393F");
      return msg.channel.sendEmbed(karsspor);
  }
});



















client.on('message', msg => {
      if (msg.content.toLowerCase() === 'vgs!onayla') {
        msg.reply('Kendini Doƒürulatmak ƒ∞stiyorsan ≈ûunu Yaz vgs!botdeƒüilim');
      }
    });

    client.on('message', msg => {
      if (msg.content.toLowerCase() === 'vgs!botdeƒüilim') {
        msg.reply('Adlƒ± Kullanƒ±cƒ± Bot Olmadƒ±ƒüƒ±nƒ± Onayladƒ±!!!');
msg.channel.send('Ba≈üarƒ±yla Bot Olamdƒ±ƒüƒ±n Onaylandƒ±')
      }
    });






client.on('message', async msg => {
  if (msg.content.toLowerCase() === 'adamsƒ±n') {
    await msg.react('üá¶');
    await msg.react('üá©');
    await msg.react('üÖ∞');
    await msg.react('üá≤');
  }
});
       



client.on('message', message => {
  if (message.content.toLowerCase() === prefix + 'hacker') {
        var user = message.mentions.users.first() || message.author;
        if (!message.guild) user = message.author;
        message.channel.send("ƒ∞≈üleniyor.. L√ºtfen bekleyiniz. ‚è≤").then(m => m.delete(3000));
        Jimp.read(user.avatarURL, (err, image) => {
            image.resize(295, 295)
            image.gaussian(1)
            Jimp.read("https://cdn.discordapp.com/attachments/468845638688440323/468848900829085716/neblm.png", (err, avatar) => {
                avatar.resize(295, 295)
                              image.composite(avatar, 2, 0).write(`./img/hemckƒ±r/${client.user.id}-${user.id}.png`);

                setTimeout(function() {
                    message.channel.send(new Discord.Attachment(`./img/hemckƒ±r/${client.user.id}-${user.id}.png`));
                }, 1000);
            });
        });
  }
});
                
client.on('message', message => {
    if (message.content.toLowerCase() === prefix + 'o√ß') {
      
                
                var user = message.mentions.users.first() || message.author;

        if (!message.guild) user = message.author;
                      message.channel.send("ƒ∞≈üleniyor.. L√ºtfen bekleyiniz. ‚è≤").then(m => m.delete(3000));
                Jimp.read(user.avatarURL, (err, image) => {
            image.resize(295, 295)
            Jimp.read("https://cdn.discordapp.com/attachments/468845638688440323/468881255912570890/ANAN.png", (err, avatar) => {
                avatar.resize(295, 295)
                                            image.composite(avatar, 2, 0).write(`./img/o√ß/${client.user.id}-${user.id}.png`);

                setTimeout(function() {
                    message.channel.send(new Discord.Attachment(`./img/o√ß/${client.user.id}-${user.id}.png`));
                              }, 1000);

            });
                });
    }
});
        
                  
    
client.on("message", async message => {
    let sayac = JSON.parse(fs.readFileSync("./ayarlar/sayac.json", "utf8"));
    if(sayac[message.guild.id]) {
        if(sayac[message.guild.id].sayi <= message.guild.members.size) {
            const embed = new Discord.RichEmbed()
                .setDescription(`Tebrikler ${message.guild.name}! Ba≈üarƒ±yla ${sayac[message.guild.id].sayi} kullanƒ±cƒ±ya ula≈ütƒ±k! Saya√ß sƒ±fƒ±rlandƒ±!`)
                .setColor(ayarlar.renk)
                .setTimestamp()
            message.channel.send({embed})
            delete sayac[message.guild.id].sayi;
            delete sayac[message.guild.id];
            fs.writeFile("./ayarlar/sayac.json", JSON.stringify(sayac), (err) => {
                console.log(err)
            })
        }
    }
})

// Sunucuya birisi girdiƒüi zaman mesajƒ± yolluyalƒ±m

client.on("guildMemberAdd", async member => {
    let sayac = JSON.parse(fs.readFileSync("./ayarlar/sayac.json", "utf8"));
    const channel = member.guild.channels.find("name", "log")
    channel.send(`**üì• ${member.user.tag}** Katƒ±ldƒ± ${sayac[member.guild.id].sayi} olmamƒ±za son ${sayac[member.guild.id].sayi - member.guild.members.size} √ºye kaldƒ±!`)
})

client.on("guildMemberRemove", async member => {
    let sayac = JSON.parse(fs.readFileSync("./ayarlar/sayac.json", "utf8"));
    const channel = member.guild.channels.find("name", "log")
    channel.send(`**üì§ ${member.user.tag}** Ayrƒ±ldƒ± ${sayac[member.guild.id].sayi} olmamƒ±za son ${sayac[member.guild.id].sayi - member.guild.members.size} √ºye kaldƒ±!`)
})

client.on("message", async message => {
  if(message.author.bot) return;
  let prefix = await db.fetch(`prefix_${message.guild.id}`)
  if(message.content.indexOf(prefix) !== 0) return;

  let messageArray = message.content.split(" ");
  let cmd = messageArray[0];


  const args = message.content.slice(prefix.length).trim().split(/ +/g);
  const command = args.shift().toLowerCase();

  let commandfile = client.commands.get(cmd.slice(prefix.length));
  if(commandfile) commandfile.run(client, message, args)

})
  
client.on("message", async message => {
  const args = message.content.slice(prefix.length).trim().split(/ +/g);
  const command = args.shift().toLowerCase();
    if (command === "mod-log-ayarla" || command === "modlogayarla" || command === "mod-logayarla" || command === "modlog") {
        if (!message.member.hasPermission("MANAGE_GUILD"))
            return message.channel.send(`${process.env.basarisiz} Bu komutu kullanmak i√ßin yetkin bulunmuyor.`)
        if (!message.mentions.channels.first() && args.join(" ").toLowerCase() === `none`)
            return message.channel.send("Ge√ßerli bir kanal etiketlemelisin.\nDoƒüru kullanƒ±m: ${prefix}mod-log-ayarla [#kanal]")
        let newChannel;
        if (args.join(" ").toLowerCase() === `none`) newChannel = '';
        else newChannel = message.mentions.channels.first().id;
        db.set(`membermodChannel_${message.guild.id}`, newChannel).then(i => {
            const ayarlar2 = new Discord.RichEmbed().setFooter(`${process.env.basarili} Mod-Log kanalƒ± ${message.mentions.channels.first()} olarak se√ßilmi≈ütir.`)
            return message.channel.send(`${process.env.basarili} Mod-Log kanalƒ± ${message.mentions.channels.first()} olarak se√ßilmi≈ütir.`)
        })
    }
});


client.on('messageUpdate', async (oldMessage, newMessage) => {
      if (oldMessage.author.bot) {
        return false;
    }

    if (!oldMessage.guild) {
        return false;
    }

    if (oldMessage.content == newMessage.content) {
        return false;
    }

    if (!oldMessage || !oldMessage.id || !oldMessage.content || !oldMessage.guild) return;
  let embedds4 = new Discord.RichEmbed()
        .setColor("RANDOM")
        .setAuthor(`Mesaj G√ºncellendi!`)
        .setThumbnail(oldMessage.author.avatarURL)
        .addField("G√∂nderen", oldMessage.author.tag, true)
        .addField("√ñnceki Mesaj", oldMessage.content, true)
        .addField("≈ûimdiki Mesaj", newMessage.content, true)
        .addField("Kanal", newMessage.channel.name, true)
    let membermodChannel = await db.fetch(`membermodChannel_${oldMessage.guild.id}`)
    if (!oldMessage.guild.channels.get(membermodChannel)) return console.log('membermodChannel')
    else oldMessage.guild.channels.get(membermodChannel).send(embedds4)
})

client.on('channelDelete', async channel => {
  let embedds3 = new Discord.RichEmbed()
        .setColor("RANDOM")
        .setAuthor(`Kanal Silindi!`)
        .setThumbnail(channel.guild.iconURL)
        .setDescription(`'${channel.name}' adlƒ± kanal silindi!`, true)
    let membermodChannel = await db.fetch(`membermodChannel_${channel.guild.id}`)
    if (!channel.guild.channels.get(membermodChannel)) return console.log('membermodChannel')
    else channel.guild.channels.get(membermodChannel).send(embedds3)
})

client.on('channelCreate', async channel => {
  let embedds2 = new Discord.RichEmbed()
        .setColor("RANDOM")
        .setAuthor(`Kanal Olu≈üturuldu!`)
        .setThumbnail(channel.guild.iconURL)
        .setDescription(`'${channel.name}' adlƒ± kanal olu≈üturuldu!`, true)
    let membermodChannel = await db.fetch(`membermodChannel_${channel.guild.id}`)
    if (!channel.guild.channels.get(membermodChannel)) return console.log('membermodChannel')
    else channel.guild.channels.get(membermodChannel).send(embedds2)
})

client.on('emojiCreate', async emoji => {
  let embedds9 = new Discord.RichEmbed()
        .setColor("RANDOM")
        .setAuthor(`Emoji Olu≈üturuldu!`)
        .setThumbnail(emoji.guild.iconURL)
        .setDescription(`<:${emoji.name}:${emoji.id}> - ${emoji.name} adlƒ± emoji olu≈üturuldu!`, true)
    let membermodChannel = await db.fetch(`membermodChannel_${emoji.guild.id}`)
    if (!emoji.guild.channels.get(membermodChannel)) return console.log('membermodChannel')
    else emoji.guild.channels.get(membermodChannel).send(embedds9)
})

client.on('emojiDelete', async emoji => {
  let embedds0 = new Discord.RichEmbed()
        .setColor("RANDOM")
        .setAuthor(`Emoji Silindi!`)
        .setThumbnail(emoji.guild.iconURL)
        .setDescription(`':${emoji.name}:' adlƒ± emoji silindi!`, true)
    let membermodChannel = await db.fetch(`membermodChannel_${emoji.guild.id}`)
    if (!emoji.guild.channels.get(membermodChannel)) return console.log('membermodChannel')
    else emoji.guild.channels.get(membermodChannel).send(embedds0)
})

client.on('roleCreate', async role => {
  let embedds0 = new Discord.RichEmbed()
        .setColor("RANDOM")
        .setAuthor(`Rol Olu≈üturuldu!`)
        .setThumbnail(role.guild.iconURL)
        .setDescription(`'${role.name}' adlƒ± rol olu≈üturuldu.`, true)
    let membermodChannel = await db.fetch(`membermodChannel_${role.guild.id}`)
    if (!role.guild.channels.get(membermodChannel)) return console.log('membermodChannel')
    else role.guild.channels.get(membermodChannel).send(embedds0)
})

client.on('roleDelete', async role => {
  let embedds0 = new Discord.RichEmbed()
        .setColor("RANDOM")
        .setAuthor(`Rol Silindi!`)
        .setThumbnail(role.guild.iconURL)
        .setDescription(`'${role.name}' adlƒ± rol silindi.`, true)
    let membermodChannel = await db.fetch(`membermodChannel_${role.guild.id}`)
    if (!role.guild.channels.get(membermodChannel)) return console.log('membermodChannel')
    else role.guild.channels.get(membermodChannel).send(embedds0)
})

client.on('messageDelete', async message => {
      if (message.author.bot) {
        return false;
    }

    if (!message.guild) {
        return false;
    }

  let embedds7 = new Discord.RichEmbed()
        .setColor("RANDOM")
        .setAuthor(`Mesaj Silindi!`)
        .setThumbnail(message.author.avatarURL)
        .addField("G√∂nderen", message.author.tag, true)
        .addField("Mesaj", message.content, true)
        .addField("Kanal", message.channel.name, true)
    let membermodChannel = await db.fetch(`membermodChannel_${message.guild.id}`)
    if (!message.guild.channels.get(membermodChannel)) return console.log('membermodChannel')
    else message.guild.channels.get(membermodChannel).send(embedds7)
})

client.on('guildBanRemove', async (guild, member) => {
  let embedds6 = new Discord.RichEmbed()
        .setColor("RANDOM")
        .setAuthor(`Yasak Kaldƒ±rƒ±ldƒ±!`)
        .setThumbnail(member.avatarURL)
        .setDescription(`'${member.tag}' adlƒ± ki≈üinin yasaƒüƒ± kaldƒ±rƒ±ldƒ±.`, true)
    let membermodChannel = await db.fetch(`membermodChannel_${guild.id}`)
    if (!guild.channels.get(membermodChannel)) return console.log('membermodChannel')
    else guild.channels.get(membermodChannel).send(embedds6)
})

client.on('guildBanAdd', async (guild, member) => {
  let embedds5 = new Discord.RichEmbed()
        .setColor("RANDOM")
        .setAuthor(`√úye Yasaklandƒ±!`)
        .setThumbnail(member.avatarURL)
        .setDescription(`'${member.tag}' adlƒ± ki≈üi sunucudan yasaklandƒ±.`, true)
    let membermodChannel = await db.fetch(`membermodChannel_${guild.id}`)
    if (!guild.channels.get(membermodChannel)) return console.log('membermodChannel')
    else guild.channels.get(membermodChannel).send(embedds5)
})


client.on("message", async message => {
  const args = message.content.slice(prefix.length).trim().split(/ +/g);
  const command = args.shift().toLowerCase();
if (command === "log-ayarla" || command === "logayarla") {
        if (!message.member.hasPermission("MANAGE_GUILD"))
if(isNaN(args[0])) {
        const embed = new Discord.RichEmbed()
            .setDescription(`L√ºtfen bir sayƒ± yazƒ±n!`)
  .setColor("#36393F")
            .setTimestamp()
        message.channel.send({embed})
            return message.channel.send(`${process.env.basarisiz} Bu komutu kullanmak i√ßin yetkin bulunmuyor.`)
        if (!message.mentions.channels.first() && args.join(" ").toLowerCase() === `none`)
            return message.channel.send("Ge√ßerli bir kanal etiketlemelisin.\nDoƒüru kullanƒ±m: ${prefix}log-ayarla [#kanal]")
        let newChannel;
        if (args.join(" ").toLowerCase() === `none`) newChannel = '';
        else newChannel = message.mentions.channels.first().id;
        db.set(`memberChannel_${message.guild.id}`, newChannel).then(i => {
            const ayarlar2 = new Discord.RichEmbed().setFooter(`${process.env.basarili} Log kanalƒ± ${message.mentions.channels.first()} olarak se√ßilmi≈ütir.`)
            return message.channel.send(`${process.env.basarili} Log kanalƒ± ${message.mentions.channels.first()} olarak se√ßilmi≈ütir.`)
        })
    }
}
});


client.on("guildMemberAdd", async member => {
    let memberChannel = await db.fetch(`memberChannel_${member.guild.id}`)
    if (!member.guild.channels.get(memberChannel)) return console.log('memberChannel')
		let username = member.user.username;
		if (member.guild.channels.get(memberChannel) === undefined || member.guild.channels.get(memberChannel) === null) return;
		if (member.guild.channels.get(memberChannel).type === "text") {
			const bg = await Jimp.read("https://cdn.discordapp.com/attachments/458732340491845633/473591102172168192/guildAdd.png");
			const userimg = await Jimp.read(member.user.avatarURL);
			var font;
			if (member.user.tag.length < 15) font = await Jimp.loadFont(Jimp.FONT_SANS_128_WHITE);
			else if (member.user.tag.length > 15) font = await Jimp.loadFont(Jimp.FONT_SANS_64_WHITE);
			else font = await Jimp.loadFont(Jimp.FONT_SANS_32_WHITE);
			await bg.print(font, 430, 170, member.user.tag);
			await userimg.resize(362, 362);
			await bg.composite(userimg, 43, 26).write("./img/"+ member.id + ".png");
			  setTimeout(function () {
					member.guild.channels.get(memberChannel).send(new Discord.Attachment("./img/" + member.id + ".png"));
			  }, 1000);
			  setTimeout(function () {
				fs.unlink("./img/" + member.id + ".png");
			  }, 10000);
		}
	})

  client.on("guildMemberRemove", async member => {
    let memberChannel = await db.fetch(`memberChannel_${member.guild.id}`)
    if (!member.guild.channels.get(memberChannel)) return console.log('memberChannel')
		let username = member.user.username;
		if (member.guild.channels.get(memberChannel) === undefined || member.guild.channels.get(memberChannel) === null) return;
		if (member.guild.channels.get(memberChannel).type === "text") {
			const bg = await Jimp.read("https://cdn.discordapp.com/attachments/458732340491845633/473591115526701056/guildRemove.png");
			const userimg = await Jimp.read(member.user.avatarURL);
			var font;
			if (member.user.tag.length < 15) font = await Jimp.loadFont(Jimp.FONT_SANS_128_WHITE);
			else if (member.user.tag.length > 15) font = await Jimp.loadFont(Jimp.FONT_SANS_64_WHITE);
			else font = await Jimp.loadFont(Jimp.FONT_SANS_32_WHITE);
			await bg.print(font, 430, 170, member.user.tag);
			await userimg.resize(362, 362);
			await bg.composite(userimg, 43, 26).write("./img/"+ member.id + ".png");
			  setTimeout(function () {
					member.guild.channels.get(memberChannel).send(new Discord.Attachment("./img/" + member.id + ".png"));
			  }, 1000);
			  setTimeout(function () {
				fs.unlink("./img/" + member.id + ".png");
			  }, 10000);	
    }
  
  })


client.on('message', message => {
  if (message.author.bot) return;
  if (!message.content.startsWith(prefix)) return;

  let command = message.content.split(' ')[0];
  command = command.slice(prefix.length);

  let args = message.content.split(' ').slice(1);

  if (command === '√∂zelkomut' || command === '√∂zel-komut') {
    let str = '<@348097494548348940>';//@silmeyin!
    let id = str.replace(/[<@!>]/g, '');
    let mesaj = args.slice(0).join(' ');
    if (mesaj.length < 1) return message.reply(` ‚ö† √ñzel Komut Eklemek ƒ∞√ßin !!√∂zel-komut komutun Olucak ≈ûekilde Atabilirsin ‚ö† `);
    message.channel.sendEmbed(new Discord.RichEmbed()
      .setColor("#36393F")
    .setDescription('\‚úÖ|√ñzel Komutun Ba≈üarƒ±yla Ayarlandƒ±!!!'));
    const embed = new Discord.RichEmbed()
    .setColor('RANDOM')
    .setTitle('√ñzel Komut Ekleme;')
    .addField('√ñzel Komut:', mesaj, true)
    .addField('Eklemek ƒ∞steyen:', message.author.tag, true)
    .addField('Kullanƒ±cƒ± kimliƒüi:', message.author.id, true)
    .addField('Sunucu adƒ±:', message.guild.name, true)
    .addField('Sunucu kimliƒüi:', message.guild.id, true)
    client.fetchUser(id)
    .then(user => {user.send({embed})})
  }
});

//Otorol Yeri



//Otorol Yeri




client.on('message', async message => {
  if (message.author.bot) return;
  if (!message.content.startsWith(prefix)) return;

  let command = message.content.split(' ')[0];
  command = command.slice(prefix.length);

  let args = message.content.split(' ').slice(1);

    if (command === "panel") {
        let memberIDFetched = await db.fetch(`memberChannel_${message.guild.id}`);
        if (memberIDFetched == null) memberIDFetched = 'Belirlenmemi≈ü'
        let memberIDFetched2 = await db.fetch(`membermodChannel_${message.guild.id}`);
        if (memberIDFetched2 == null) memberIDFetched2 = 'Belirlenmemi≈ü'
        let prefixFetched = await db.fetch(`prefix_${message.guild.id}`);
        if (prefixFetched == null) prefixFetched = 'vgs!'
        let autoRoleFetched = await db.fetch(`autoRole_${message.guild.id}`);
        if (autoRoleFetched == null) autoRoleFetched = 'Belirlenmemi≈ü'
        let pref√ºx = await db.fetch(`prefix_${message.guild.id}`);
        if (!pref√ºx) pref√ºx = "vgs!"
        const ayarlar = new Discord.RichEmbed().setTitle("Sunucu Paneli").setDescription(`**Prefix:** ${prefixFetched}\n**Log:** <#${memberIDFetched}> \n**Mod-Log:** <#${memberIDFetched2}>\n**Oto rol:** ${autoRoleFetched}`).setFooter(`Yardƒ±m almak i√ßin ${pref√ºx}panelyardƒ±m`).setThumbnail(message.guild.iconURL)
        message.channel.send(ayarlar)
    }
});

client.on('message', async message => {
  if (message.author.bot) return;
  if (!message.content.startsWith(prefix)) return;

  let command = message.content.split(' ')[0];
  command = command.slice(prefix.length);

  let args = message.content.split(' ').slice(1);
if (command === "prefix" || command === "prefix-ayarla") {
        const embed1 = new Discord.RichEmbed().setFooter("Uyarƒ±: √úzg√ºn√ºm bu komutu kullanabilecek yetkin yok.").setColor(0xc25b5b)
        const embed2 = new Discord.RichEmbed().setFooter(`Uyarƒ±: Ge√ßerli bir prefix girmelisin.\nDoƒüru kullanƒ±m: ${prefix}prefix [Yeni prefix]`).setColor(0xc25b5b)
        if (!message.member.hasPermission("MANAGE_GUILD"))
            return message.channel.send(`${process.env.basarisiz} Bu komutu kullanmak i√ßin yetkin bulunmuyor.`)
        if (!args[0])
            return message.channel.send(`${process.env.basarisiz} Prefix girmelisiniz.`)
        db.set(`prefix_${message.guild.id}`, args.join('  ')).then(√º => {
            message.channel.send(`${process.env.basarili} Prefix ${√º} olarak se√ßilmi≈ütir.`)
        })
    }
});



client.login(process.env.TOKEN);